from zenova import mongodb as collection


key = "ownertg"


def add_user_id(language, user_id, field):
    # Update the stored document
    collection.update_one({key: {"$exists": True}}, {"$push": {f"{key}.{language}.{field}": user_id}})
    print(f"User ID {user_id} added to the '{field}' field of the '{language}' language.")

def find_language_by_user_id(user_id):
    # Retrieve the stored document
    stored_data = collection.find_one({key: {"$exists": True}})
    if stored_data:
        for language, lang_data in stored_data[key].items():
            for field, user_ids in lang_data.items():
                if user_id in user_ids:
                    return language
    return None

def find_field_by_user_id_and_language(user_id, language, *fields):
    # Retrieve the stored document
    stored_data = collection.find_one({key: {"$exists": True}})
    if stored_data and language in stored_data[key]:
        lang_data = stored_data[key][language]
        for field in fields:
            if field in lang_data and user_id in lang_data[field]:
                return field
    return None

def get_gender(user_id):
    language = find_language_by_user_id(user_id)
    gender_field = find_field_by_user_id_and_language(user_id, language, "male", "female")
    if gender_field == "male":
        return "Male"
    elif gender_field == "female":
        return "Female"
    else:
        return None

def get_age_group(user_id):
    language = find_language_by_user_id(user_id)
    age_group_field = find_field_by_user_id_and_language(user_id, language, "below_18", "18_24", "25_34", "above_35")
    if age_group_field == "below_18":
        return "Below 18"
    elif age_group_field == "18_24":
        return "18-24"
    elif age_group_field == "25_34":
        return "25-34"
    elif age_group_field == "above_35":
        return "Above 35"
    else:
        return None

def get_interest(user_id):
    language = find_language_by_user_id(user_id)
    interest_field = find_field_by_user_id_and_language(user_id, language, "communication", "intimacy", "selling")
    if interest_field:
        return interest_field.capitalize()
    else:
        return None

if __name__ == "__main__":
    # Test the functions
    user_id_to_check = 888
    print(f"User ID: {user_id_to_check}")
    print(f"Language:{find_language_by_user_id(user_id_to_check)}")
    print(f"Gender: {get_gender(user_id_to_check)}")
    print(f"Age Group: {get_age_group(user_id_to_check)}")
    print(f"Interest: {get_interest(user_id_to_check)}")
